{"version":3,"file":"testing-pui.stories-992b22ce.js","sources":["../../src/storybook/coding/testing-pui.md?raw"],"sourcesContent":["export default \"# 测试 PUI\\n\\n如何写测试代码\\n\\n1. 在组建的的文件夹里加入 \\\\_\\\\_tests\\\\_\\\\_/[组件名字].test.tsx\\n2. 编写测试代码\\n\\n在 VS Code 安装 Jest Runner 可以实现点击代码单个测试\\n\\n## 测试渲染\\n\\n在组建属性中传入一个或多个，查看渲染结果\\n\\n```ts\\nimport React from 'react'\\nimport { act } from 'react-dom/test-utils'\\nimport { render, screen } from '@testing-library/react'\\n\\nimport { Button } from '../button'\\n\\ndescribe('Test Button', () => {\\n  test('test render button', async () => {\\n    const button = render(\\n      <Button>\\n        <div>中文按钮</div>\\n      </Button>\\n    )\\n    // 测试页面上有这个内容\\n    screen.getByText('中文按钮')\\n\\n    // 测试按钮上有这个内容\\n    button.getByText('中文按钮')\\n\\n    // 测试页面上没这个内容\\n    expect(button.queryByText('无这段文字')).toBeNull()\\n  })\\n})\\n```\\n\\n## 事件测试\\n\\n点击组件的某个，产生状态变化\\n\\n推荐使用 Testing Library 的 fireEvent\\n\\n```ts\\nimport React from 'react'\\nimport { act } from 'react-dom/test-utils'\\nimport { render, screen, fireEvent, act } from '@testing-library/react'\\n\\nimport { Button } from '../button'\\n\\ndescribe('Test Button', () => {\\n  test('button clickable', async () => {\\n    let clicked = false\\n    render(\\n      <Button\\n        onClick={() => {\\n          clicked = true\\n        }}\\n      >\\n        Button\\n      </Button>\\n    )\\n    // 推荐写法\\n    fireEvent.click(screen.getByText('Button'))\\n\\n    // 原始写法，点击触动组件内部state变化的要写到 act 里，点击事件要加 await\\n    await act(async () => {\\n      await screen.getByText('Button').click()\\n    })\\n\\n    expect(clicked).toBe(true)\\n  })\\n})\\n```\\n\\n## Debug 测试\\n\\n```ts\\n// 打印当前屏幕\\nscreen.debug()\\n```\\n\""],"names":["Develop"],"mappings":"uaAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;"}