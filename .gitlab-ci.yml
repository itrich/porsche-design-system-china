stages:
  - Build
  - Package 
  - Deployment 
build:
  image: 150520991865.dkr.ecr.cn-north-1.amazonaws.com.cn/devops/nodejs-build:finder-node14
  stage: Build
  only:
    refs:
      - staging
      - develop
      - master
      - release
      # - merge_requests
  tags:
    - pdc-share-runner
  allow_failure: false
  cache:
    paths:
      - node_modules/
  artifacts:
    untracked: false
    expire_in: 20 mins
    when: on_success
    paths:
      - ./@pui/react/storybook-static
      - ./@pui/react/es 
  script:
    - echo "building artifacts"
    - sed -i "s/s1.web.porsche-preview.cn/web.devops.porsche-internaldns.cn:4001/g" ./.npmrc
    - sed -i "s/s1.web.porsche-preview.cn/web.devops.porsche-internaldns.cn:4001/g" ./package.json
    - unset CI
    - pwd && du -sh *
    - npm run install-all
    - npm -w @pui/icons run pipeline-generate
    - npm -w @pui/icons run build
    - npm -w @pui/react run build-storybook
    - ls -al ./@pui/react/storybook-static/
    - du -sh *
 
buid_image:
  image: 150520991865.dkr.ecr.cn-north-1.amazonaws.com.cn/devops/docker:19-with-awscli
  stage: Package
  services:
    - name: 150520991865.dkr.ecr.cn-north-1.amazonaws.com.cn/devops/docker:19-dind
      alias: docker
      entrypoint: ['env', '-u', 'DOCKER_HOST']
      command: ['dockerd-entrypoint.sh']
  only:
    refs:
      - develop
      - staging
      - release
      # - merge_requests
  dependencies:
    - build
  variables:
    # GIT_STRATEGY: none
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
    IMAGE_NAME: '$AWS_ECR_REPO:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID'
  script:
    - ls -al
    - ls -al ./@pui/react/storybook-static/
    - $(aws ecr get-login --no-include-email --region cn-north-1)
    - echo "-------------S:Build docker image-------------"
    - docker build -f ./DockerDir/dev/Dockerfile -t ${IMAGE_NAME} .
    - docker tag ${IMAGE_NAME} $AWS_ECR_REPO:react-$CI_COMMIT_REF_NAME-${CI_PIPELINE_ID}
    - docker push $AWS_ECR_REPO:react-$CI_COMMIT_REF_NAME-${CI_PIPELINE_ID}
    - echo "-----------E:Build image and pushed------------"
  tags:
    - pdc-share-runner
 
deploy_react:
  stage: Deployment 
  only:
    refs:
      - develop
      - staging
      - release
      - master
  script:
    - pwd
    - echo ${CI_COMMIT_REF_NAME}
    - |
      if [[ ${CI_COMMIT_REF_NAME} == "master" ]];then
        sed -i "s/pui\\:[0-9]*.[0-9][0-9]$/pui\\:react-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}/g" ./kubedir/frontend_deployment-master.yaml
        sed -i "s/puifrontendservice/pui-react-frontend/g" ./kubedir/frontend_deployment-master.yaml
        /usr/local/bin/kubectl get all --kubeconfig ~/kubeconfig/kube-master/config
        /usr/local/bin/kubectl apply -f ./kubedir/frontend_deployment-master.yaml --kubeconfig ~/kubeconfig/kube-master/config
      elif [[ ${CI_COMMIT_REF_NAME} == "release" ]];then
        sed -i "s/pui\\:[0-9]*.[0-9][0-9]$/pui\\:react-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}/g" ./kubedir/frontend_deployment-release.yaml
        sed -i "s/puifrontendservice/pui-react-frontend/g" ./kubedir/frontend_deployment-release.yaml
        /usr/local/bin/kubectl get all --kubeconfig ~/kubeconfig/kube-staging/config
        /usr/local/bin/kubectl apply -f ./kubedir/frontend_deployment-release.yaml --kubeconfig ~/kubeconfig/kube-staging/config
      elif [[ ${CI_COMMIT_REF_NAME} == "staging" ]];then
        sed -i "s/pui\\:[0-9]*.[0-9][0-9]$/pui\\:react-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}/g" ./kubedir/frontend_deployment-staging.yaml
        sed -i "s/puifrontendservice/pui-react-frontend/g" ./kubedir/frontend_deployment-staging.yaml
        /usr/local/bin/kubectl get all --kubeconfig ~/kubeconfig/kube-staging/config
        /usr/local/bin/kubectl apply -f ./kubedir/frontend_deployment-staging.yaml --kubeconfig ~/kubeconfig/kube-staging/config 
      elif [[ ${CI_COMMIT_REF_NAME} == "develop" ]];then
        sed -i "s/pui\\:[0-9]*.[0-9][0-9]$/pui\\:react-${CI_COMMIT_REF_NAME}-${CI_PIPELINE_ID}/g" ./kubedir/frontend_deployment-dev.yaml
        sed -i "s/puifrontendservice/pui-react-frontend/g" ./kubedir/frontend_deployment-dev.yaml
        /usr/local/bin/kubectl apply -f ./kubedir/frontend_deployment-dev.yaml --kubeconfig ~/kubeconfig/eks-dev/config 
      fi
  tags:
    - pdcshell 